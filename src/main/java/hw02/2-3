Задание 2
try {
   int d = 0;
   double catchedRes1 = intArray[8] / d;
   System.out.println("catchedRes1 = " + catchedRes1);
} catch (ArithmeticException e) {
   System.out.println("Catching exception: " + e);
}
Помимо того что с d = 0 всегда будет выбивать исключение и строка с печатью результата не сработает никогда
можно ловить ещё IndexOutOfBoundsException.


Задание 3

public static void main(String[] args) throws Exception {
   try {
       int a = 90;
       int b = 0;
       System.out.println(a / b);
       printSum(23, 234);
       int[] abc = { 1, 2 };
       abc[3] = 9;
   } catch (Throwable ex) {
       System.out.println("Что-то пошло не так...");
   } catch (NullPointerException ex) {
       System.out.println("Указатель не может указывать на null!");
   } catch (IndexOutOfBoundsException ex) {
       System.out.println("Массив выходит за пределы своего размера!");
   }
}
public static void printSum(Integer a, Integer b) throws FileNotFoundException {
   System.out.println(a + b);
}

FileNotFoundException не нужен, нет работы с файлами.
catch (Throwable ex) ловит все исключения и ошибки, либо оставлять только эту строку (и заменить Throwable на Exception?), либо другие две.
